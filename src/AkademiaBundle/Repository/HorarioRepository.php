<?php

namespace AkademiaBundle\Repository;

/**
 * HorarioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HorarioRepository extends \Doctrine\ORM\EntityRepository
{

        public function getHorarios(){

                $query = "select * from ACADEMIA.horario where convocatoria= 1  and vacantes <> 0 and estado = 1";
                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();
                $horarios = $stmt->fetchAll();

                return $horarios;
        }

        public function getHorariosVacantes($idHorario){
                $query = "select vacantes from ACADEMIA.horario where id = '$idHorario' ";
                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();
                $horarios = $stmt->fetchAll();

                return $horarios;
        }

        public function getHorariosDiscapacitados(){
        
                $query = "select * from ACADEMIA.horario where discapacitados = 1";
                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();
                $horarios = $stmt->fetchAll();

                return $horarios;

        }

        public function getHorariosComplejos($idcomplejo){
        
                $query ="select rtrim(dis.dis_descripcion) as nombreDisciplina,
                        dis.dis_codigo as idDisciplina,
                        hor.id as idHorario,
                        hor.turno as turno,
                        hor.discapacitados as discapacidad,
                        hor.edadMinima as edadMinima,
                        hor.edadMaxima as edadMaxima,
                        hor.horaInicio as horaInicio, 
                        hor.horaFin as horaFin, 
                        hor.vacantes as vacantes,
                        hor.convocatoria as convocatoria,
                        edi.edi_codigo as edi_codigo
                        from 
                        ACADEMIA.horario as hor inner join CATASTRO.edificacionDisciplina as edi on hor.edi_codigo = edi.edi_codigo
                        inner join CATASTRO.disciplina as dis on edi.dis_codigo = dis.dis_codigo
                        inner join CATASTRO.edificacionesdeportivas as ede on edi.ede_codigo = ede.ede_codigo
                        where ede.ede_codigo =$idcomplejo and dis.dis_estado = 1";

                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();
                $horarios = $stmt->fetchAll();

                return $horarios;

        }

        public function getCapturarEdiCodigo($idComplejo, $idDisciplina){

                $query="select edi_codigo from catastro.edificacionDisciplina where ede_codigo = $idComplejo and dis_codigo = $idDisciplina";
                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();
                $horarios = $stmt->fetchAll();

                return $horarios;
        }

        public function getActualizarHorarios($idHorario, $idDisciplina, $vacantes, $convocatoria){

                $query = "update academia.horario set convocatoria = $convocatoria, vacantes = $vacantes from academia.horario a, catastro.disciplina b where a.id = $idHorario and b.dis_codigo = $idDisciplina";
                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();

        }

        public function getMostrarCambios($idHorario){

                $query = "select vacantes, convocatoria from academia.horario where id='$idHorario'";
                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();
                $horarios = $stmt->fetchAll();

                return $horarios;

        }
        public function getActualizarVacantesHorarios($idHorario){

                $query = "update academia.horario set vacantes = (vacantes - 1) where id = $idHorario and vacantes > 0";
                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();

        }

        public function getAcumularInscritos($idHorario){

                $query = "update academia.horario set inscritos = (inscritos + 1) where id = $idHorario ";
                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();
        
        }

        public function getCrearHorario($vacantes, $horaInicio, $horaFin, $edadMinima, $edadMaxima, $ediCodigo, $discapacitados, $convocatoria, $turno){
                $query=" insert academia.horario (vacantes, horaInicio, horaFin, edadMinima, edadMaxima, edi_codigo, discapacitados,convocatoria, turno, estado ,inscritos) values ($vacantes,$horaInicio,$horaFin,$edadMinima,$edadMaxima,$ediCodigo,$discapacitados,$convocatoria,$turno,1,0)";
                $stmt = $this->getEntityManager()->getConnection()->prepare($query);
                $stmt->execute();

        }

}
